@model DelaWeb.Models.Order
@using DelaWeb.Helpers
@{
    ViewBag.Title = "Crear Orden";
    var redirectTo = ViewBag.RedirectTo;
    var customerID = ViewBag.CustomerID != null ? ViewBag.CustomerID : 0;
}

<style>
    #create-order-view table {
        text-align: center;
    }
    #create-order-view td {
        white-space: nowrap;
    }
    #create-order-view input{
        max-width: none;
    }
</style>
<div id="create-order-view">
    <h2 class="mt-5">Create Order</h2>

        <div class="mt-5">
            <div class="row">
                @if (User.Identity.IsMaster())
                {
                    <text>
                        <input type="text" name="CustomerID" value="@customerID" />
                    </text>
                }
                else
                {
                    <input type="hidden" name="CustomerID" value="@customerID" />
                }
                @Html.HiddenFor(c => c.Type, new { Value = 1 })

                <div class="col-sm-6 form-group">
                    @Html.Label("Agregar Productos", htmlAttributes: new { @class = "control-label " })
                    <div class="row">
                        <div class="col-md-8 d-inline-block">
                            @*@Html.DropDownList("Product", Html.Products(), new { @class = "form-control", style = "max-width: none; width: 100%;" })*@
                            <select class="form-control" name="products" id="Product">
                                @foreach (var item in DelaWeb.Service.ProductsService.GetAllProducts())
                                {
                                    <option value="@item.ItemID" data-price="@item.Price" data-name="@item.Name" data-discountprice="@item.DiscountPrice">@item.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2 d-inline-block">
                            @Html.TextBox("Cantidad", "1", new { @class = "form-control", type = "number" })
                        </div>
                        <div class="col-sm-2">
                            <a id="add-item" class="btn btn-secondary" data-loading-text="Agregando...">Agregar</a>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12" id="item-list">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th scope="col">Codigo</th>
                                <th scope="col">Nombre</th>
                                <th scope="col">Cantidad</th>
                                <th scope="col">Precio</th>
                                <th scope="col">Precio Desc.</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!--Dinamically Inyected-->
                        </tbody>
                        <tfoot>
                            <tr class="totals">
                                <td colspan="3" class="text-right"><span >Total:</span></td>
                                <td><span id="total-price">$ 0.00</span></td>
                            </tr>
                        </tfoot>
                    </table>

                    <div class="space-50"></div>

                    <div class="form-group col-md-12">
                        <input id="submit" type="submit" value="Crear Orden" class="btn btn-primary btn-block btn-green" />
                    </div>
                </div>

            </div>
        </div>
    @*}*@
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@

<script>
    require(["jquery", "ajax", "swal", "bootstrap"], function ($, ajax, swal) {
        var $context = $('#create-order-view');

        var cont = 1;
        var items = [];
        let customerDetailsUrl = '@Url.Action("Details", "Customers", new { id = customerID })';
        let createOrderUrl = '@Url.Action("CreateOrder","Orders")';
        let getProductUrl = '@Url.Action("GetProductInfo","Products")';
        var $itemlist = $('#item-list tbody');
        var total = 0;

        $('#add-item').on('click', function (e) {
            debugger;
            //$(this).button('loading');
            var $product = $('#Product option:selected');
            var code = $product.val();
            var nombre = $product.data('name');
            var cant = $('#Cantidad').val();
            var price = $product.data('price');
            var discountPrice = $product.data('discountprice');
            if (cant <= 0) return;

            var htm = "<tr scope='row' data-item='" + cont + "'><td>" + code + "</td><td>" + nombre + "</td><td>" + cant +
                "<a class='btn btn-quantity' data-action='minus' data-item='" + cont +
                "'>-</a><a class='btn btn-quantity' data-action='plus' data-item='" + cont + "'>+</a></td><td>" + price +
                "</td><td>" + discountPrice + "</td><td><a class='remove-item' data-item='" + cont + "'>Quitar</a></td></tr>"
            $itemlist.append(htm);

            var json = { Index: cont, Code: code, Name: nombre, Quantity: cant, Price: price, DiscPrice: discountPrice };
            items.push(json);
            $(this).button('reset');
            $('#Cantidad').val(1);
            cont++;
            calculateTotal();
        });

        $context.on('click', '[data-action="plus"]', function () {
            var id = $(this).data('item');
            
            for (var i = 0; i < items.length; i++) {
                if (id == items[i].Index) {
                    debugger;
                    items[i].Quantity = parseInt(items[i].Quantity) + 1;
                }
            }
            debugger;
            renderItems();
            calculateTotal();
        });

        $context.on('click', '[data-action="minus"]', function () {
            var id = $(this).data('item');
            
            for (var i = 0; i < items.length; i++) {
                if (id == items[i].Index) {
                    debugger;
                    items[i].Quantity = parseInt(items[i].Quantity) - 1;
                    if (items[i].Quantity==0) {
                        items.splice(i, 1);
                    }
                }
            }
            debugger;
            renderItems();
            calculateTotal();
        });

        $context.on('click', '.remove-item', function () {
            var id = $(this).data('item');
            $('tr[data-item="' + id + '"]').remove();

            for (var i = 0; i < items.length; i++) {
                if (id == items[i].Index) {
                    items.splice(i,1);
                }
            }
            calculateTotal();
        });

        

        $("#submit").on("click", function () {
            debugger;
            if (total < 990) {
                swal.fire("El costo mínimo por órden es de $ 990.00, pagando $ 495.00 USD");
                return;
            }
            var data = {};
            let customer = $('[name="CustomerID"').val();
            let type = $('[name="Type"').val();

            data.items = JSON.stringify(items);
            data.customerid = customer;
            data.type = type;

            ajax.json({
                url: createOrderUrl,
                data: data, //JSON.stringify(data),
                success: function (d) {
                    if (d.success == true) {
                        swal.fire('Hecho!!');
                        setTimeout(function () {
                            window.location = customerDetailsUrl;
                        }, 1000);
                    }
                    else {
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error!!');
                }
            });
        });

        function calculateTotal() {
            total = 0;
            for (var i = 0; i < items.length; i++) {
                total = total + (items[i].Price * items[i].Quantity);
            }
            $('#total-price').text("$ " + total.toFixed(2));
        }

        function renderItems() {

            $itemlist.html('');

            for (var i = 0; i < items.length; i++) {
                //let cont = items[i].Index;
                //let code = items[i].Code;
                //let cant = items[i].Quantity;
                //let nombre = items[i].Name;
                //let price = items[i].Price;
                //let discountPrice = items[i].DiscPrice;

                var htm = "<tr scope='row' data-item='" + items[i].Index + "'><td>" + items[i].Code + "</td><td>" + items[i].Name + "</td><td>" + items[i].Quantity +
                    "<a class='btn btn-quantity' data-action='minus' data-item='" + items[i].Index +
                    "'>-</a><a class='btn btn-quantity' data-action='plus' data-item='" + items[i].Index + "'>+</a></td><td>" + items[i].Price +
                    "</td><td>" + items[i].DiscPrice + "</td><td><a class='remove-item' data-item='" + items[i].Index + "'>Quitar</a></td></tr>"

                $itemlist.append(htm);
            }
        }
    });


</script>
}
