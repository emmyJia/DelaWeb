@model DelaWeb.Models.Order
@using DelaWeb.Helpers
@{
    ViewBag.Title = "Create";
    var redirectTo = ViewBag.RedirectTo;
    var customerID = ViewBag.CustomerID != null ? ViewBag.CustomerID : 0;
}

<style>
    #create-order-view table {
        text-align: center;
    }
    #create-order-view td {
        white-space: nowrap;
    }
    #create-order-view input{
        max-width: none;
    }
</style>
<div id="create-order-view">
    <h2 class="mt-5">Create Order</h2>

    @*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()*@

        <div class="mt-5">
            <div class="row">

                <hr />
                <div>
                    <!--hidden Inputs-->
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*@Html.HiddenFor(c => c.Date, new { Value = DateTime.Now.ToShortDateString() })*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @Html.HiddenFor(c => c.CustomerID)

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @Html.HiddenFor(c => c.Type, new { Value = 1 })
                </div>

                <div class="col-sm-8 form-group">
                    @Html.Label("Agregar Productos", htmlAttributes: new { @class = "control-label " })
                    <div class="row">
                        <div class="col-md-8 d-inline-block">
                            @Html.DropDownList("Product", Html.Products(), new { @class = "form-control", style = "max-width: none; width: 100%;" })
                        </div>
                        <div class="col-md-2 d-inline-block">
                            @Html.TextBox("Cantidad", "1", new { @class = "form-control", type = "number" })
                        </div>
                        <div class="col-sm-2">
                            <a id="add-item" class="btn btn-secondary">Agregar</a>
                        </div>
                    </div>
                </div>

                <div class="col-sm-4" id="item-list">
                    <table>
                        <thead>
                            <tr>
                                <th>Codigo</th>
                                <th>Nombre</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>

                    <div style="margin-top:50px"></div>

                    <div class="form-group col-md-12">
                        <input id="submit" type="submit" value="Crear Orden" class="btn btn-primary btn-block" />
                    </div>
                </div>

            </div>
        </div>
    @*}*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        var $context = $('.form-horizontal');


        var cont = 1;
        var items = [];
        let customerDetailsUrl = '@Url.Action("Details","Customers",new { id = customerID })';
        let createOrderUrl = '@Url.Action("CreateOrder","Orders")';
        var $itemlist = $('#item-list tbody');

        $('#add-item').on('click', function (e) {
            var nombre = $('#Product option:selected').text();
            var code = $('#Product').val();
            var cant = $('#Cantidad').val();
            var htm = "<tr data-item='" + cont + "'><td>"+ cont + "</td><td>" + nombre + "</td><td>" + cant + "</td><td><a class='remove-item' data-item='" + cont + "'>Quitar</a></td></tr>"
            $itemlist.append(htm);
            var json = { Index: cont, Code: code, Name: nombre, Quantity: cant };
            items.push(json);
            cont++;
        });

        $context.on('click', '.remove-item', function () {
            debugger;
            var id = $(this).data('item');
            $('tr[data-item="' + id + '"]').remove();

            for (var i = 0; i < items.length; i++) {
                if (id == items[i].index) {
                    items.splice(i,1);
                }
            }

        });

    $("#submit").on("click", function () {
        debugger;
            var data = {};
            let customer = $('[name="CustomerID"').val();
            let type = $('[name="Type"').val();
            data.items = JSON.stringify(items);
            data.customerid = customer;
            data.type = type;

            $.ajax({
                type: "POST",
                url: createOrderUrl,
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: data, //JSON.stringify(data),
                success: function (d) {
                    if (d.success == true) {
                        alert('Has introducido una nueva orden!!');
                        setTimeout(function () {
                            window.location = customerDetailsUrl;
                        }, 1000);
                    }
                    else {
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error!!');
                }
            });
        });
</script>
}
